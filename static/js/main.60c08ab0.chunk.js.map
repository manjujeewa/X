{"version":3,"sources":["components/Loader.js","components/Login.js","components/Header.js","components/Main.js","components/Postlist.js","components/Post.js","containers/RantList.js","containers/RantDetails.js","App.js","serviceWorker.js","index.js"],"names":["Loader","props","react_default","a","createElement","class","isLoading","Login","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","alert","isOpen","title","onClick","onclick","name","onSubmit","handleSubmit","type","placeholder","ref","input","focus","components_Loader","value","React","Component","Header","_this","state","isToggleOn","handleClick","bind","assertThisInitialized","setState","href","height","width","cx","cy","r","fill","components_Login","Main","children","PostList","Post","viewBox","d","RantList","components_Main","Postlist","components_Post","RantDetails","params","match","rant_id","App","BrowserRouter","className","components_Header","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60c08ab0.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Loader (props) {\n\n      return (\n        <div class={\"loader \" + (props.isLoading? '' : 'hide')}>\n          <div class=\"spinner\"></div>\n        </div>\n      )\n    \n  }\n\nexport default Loader;","import React from 'react';\nimport Loader from './Loader';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props); \n        \n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        alert(\"Hii\")\n    }\n\n    render() {\n      return (\n        <div class={\"popup \" + (this.props.isOpen? 'popup--open' : '')}>\n            <div class=\"popup__header\">\n                <div title=\"Close\" class=\"close layout--center\" onClick={this.props.onclick}>\n                    X\n                </div>\n            </div>\n            <div class=\"popup__body layout--center\">\n                <div class=\"popup__body-inner\">\n\n                    <div class=\"form\">\n                        <div class=\"form__title\">\n                            JOIN <span class=\"highlight\">#</span>DEVRANT\n                        </div>\n                        <div class=\"form__description\">\n                            Vote and comment on others' rants. Post your own.\n                        </div>\n                        <form name=\"login\" onSubmit={this.handleSubmit}>\n                            <div class=\"login\">\n\n                                <input type=\"text\" placeholder=\"USERNAME\" ref={input => input && input.focus()}/>\n                                <input type=\"password\" placeholder=\"PASSWORD\" />\n\n                                <Loader isLoading={false}/>\n\n                                <div class=\"form__error\">\n                                    Some fields are missing !\n                                </div>\n                                \n                                <input type=\"submit\" value=\"LET ME IN\" />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n      )\n    }\n  }\n\nexport default Login;","import React from 'react';\nimport Login from './Login';\n\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isToggleOn: false};\n    \n        // This binding is necessary to make `this` work in the callback\n        this.handleClick = this.handleClick.bind(this);\n      }\n\n      handleClick() {\n        this.setState(state => ({\n          isToggleOn: !state.isToggleOn\n        }));\n      }\n\n    render() {\n      return (\n        <section class=\"header layout--center\">\n            <div class=\"header__content layout--wrapped\">\n                <div class=\"brand\">\n                    <a href=\"/\"><div class=\"brand__name\"><span>#</span>DEVRANT</div></a>\n                </div>\n\n                {/* User Profile */}\n                <div class=\"profile layout--center hide\">\n                    <div class=\"profile__picture\">\n                        <svg height=\"36\" width=\"36\">\n                            <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#5c5f6f\"></circle>\n                        </svg>\n                    </div>\n                    <div class=\"profile__name\">Elon</div>\n                </div>\n\n                <div class=\"join\">\n                    <span onClick={this.handleClick}>Join</span>\n                    <span>Sign Out</span>\n                </div>\n                <Login isOpen={this.state.isToggleOn ? true : false} onclick={this.handleClick}/>\n            </div>\n        </section>\n      )\n    }\n  }\n\nexport default Header;","import React from 'react';\nimport Loader from \"./Loader\"\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.state = {isLoading: false};\n        //this.state.isLoading\n    }\n\n    render() {\n\n      return (\n        <section class=\"main layout--center\">\n            <div class=\"main__content layout--wrapped\">\n                <Loader isLoading={false}/>\n                {this.props.children}\n            </div>\n        </section>\n      )\n    }\n  }\n\nexport default Main;","import React from 'react';\n\nclass PostList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n      return (\n        <div class=\"post-list\">\n          {this.props.children}\n          <div class=\"rant__add\" title=\"Add Rant\">+</div>\n        </div>\n      )\n    }\n  }\n\nexport default PostList;","import React from 'react';\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n      return (\n        <article class=\"post\">\n          <div class=\"post__inner\">\n              <div class=\"score\">\n                  <div class=\"score__up layout--center\">++</div>\n                  <div class=\"score__board layout--center\">100</div>\n                  <div class=\"score__down layout--center\">--</div>\n              </div>\n              <div class=\"post__body\">\n                  Hello World... </div>\n          </div>\n          <div class=\"post__footer\">\n              <div class=\"post__time\">2m ago</div>\n              <div class=\"post__comments\">\n                  <svg class=\"icon\" viewBox=\"0 0 31 32\">\n                      <path d=\"M24.732 24.371v7.629l-7.267-7.267h-8.808c-4.781 \n                      0-8.657-3.875-8.657-8.657v-7.42c0-4.781 3.876-8.657 \n                      8.657-8.657h13.604c4.781 0 8.657 3.875 8.657 8.657v7.42c0 \n                      3.922-2.61 7.23-6.186 8.294z\"></path>\n                  </svg>\n                  23\n              </div>\n          </div>\n          </article>\n      )\n    }\n  }\n\nexport default Post;","import React from 'react';\nimport Main from \"../components/Main\";\nimport PostList from \"../components/Postlist\";\nimport Post from  \"../components/Post\";\n\nclass RantList extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.state = {isLoading: false};\n        //this.state.isLoading\n    }\n\n    render() {\n\n        return (\n            <Main isLoading={false}>\n                <PostList>\n                <Post/><Post/>\n                </PostList>\n                \n            </Main>\n        )\n      }\n}\n\nexport default RantList;","import React from 'react';\nimport Main from \"../components/Main\";\nimport PostList from \"../components/Postlist\";\nimport Post from  \"../components/Post\";\nclass RantDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.state = {isLoading: false};\n        //this.state.isLoading\n    }\n\n    render() {\n        const { params } = this.props.match\n        return (\n            <Main isLoading={false}>\n                <PostList>\n                <h1>{params.rant_id}</h1>\n                </PostList>\n            </Main>\n        )\n      }\n}\n\nexport default RantDetails;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport RantList from \"./containers/RantList\";\nimport RantDetails from \"./containers/RantDetails\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"page\">\n          <Header/>\n          <div>\n            <Route exact path=\"/\" component={RantList} />\n            <Route exact path=\"/rant/:rant_id\" component={RantDetails} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}